name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
      - 'v*-beta*'
      - 'v*-alpha*'
      - 'v*-rc*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Setup Google Services
        run: |
          if [ "${{ secrets.GOOGLE_SERVICES_JSON }}" != "" ]; then
            echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json
            echo "✅ Google Services configured"
          else
            echo "⚠️ No Google Services configured - build may fail"
          fi
        
      - name: Setup signing (if available)
        run: |
          if [ "${{ secrets.KEYSTORE_FILE }}" != "" ]; then
            echo "Setting up release signing..."
            echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > android/app/release-key.jks
            echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/keystore.properties
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/keystore.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/keystore.properties
            echo "storeFile=release-key.jks" >> android/keystore.properties
            echo "✅ Release signing configured"
          else
            echo "⚠️ No release signing configured, using debug signing"
          fi
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Extract version from tag
        run: |
          # Extract version from git tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "📦 Version: $VERSION"
        
      - name: Rename APK with version
        run: |
          # Rename the APK file to include version
          cp build/app/outputs/flutter-apk/compudecsi.apk build/app/outputs/flutter-apk/compudecsi-${{ env.VERSION }}.apk
          echo "📱 APK renamed to: compudecsi-${{ env.VERSION }}.apk"
        
      - name: Build Complete
        run: |
          echo "✅ APK built successfully!"
          echo "📱 Download the APK from the release"
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: compudecsi-${{ env.VERSION }}
          path: build/app/outputs/flutter-apk/compudecsi-${{ env.VERSION }}.apk
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/compudecsi-${{ env.VERSION }}.apk
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
